{
	"folders": [
		{
			"path": "."
		},
		{
			"path": "packages/jivs-engine"
		},
		{
			"path": "packages/jivs-examples"
		},
		{
			"path": "packages/jivs-configanalysis"
		}
	],
	"settings": {
		/* VSCode will use TSC only on workspaces, not the global level */
		"typescript.tsdk": "./node_modules/typescript/lib",
		"typescript.enablePromptUseWorkspaceTsdk": true,
		"typescript.enablePromptUseGlobalTsdk": false,		
		"explorerExclude.backup": {},
		"files.exclude": {
			"**/.git": false,
			"**/.svn": false,
			"**/.hg": false,
			"**/CVS": false,
			"**/.DS_Store": false,
			"**/Thumbs.db": false,
			".eslintignore": false,
			".gitattributes": false,
			".gitignore": false,
			".npmignore": false,
			"Jivs.code-workspace": false,
			"lerna.json": false,
			"LICENSE": false,
			"package-lock.json": false,
			"typedoc_output": false,
			"node_modules": false,
			".vscode": false
		},
		"explorerExclude.showPicker": false,
		"explorer.excludeGitIgnore": false,

		"jestrunner.configPath": "./jest.config.json",
		"jestrunner.debugOptions": {
			"runtimeArgs": [
			  "--experimental-vm-modules"
			]
		},		
		"jest.runMode": {
			"type": "on-demand",
			"coverage": true			
		},
		"typescript.preferences.autoImportFileExcludePatterns": [
			"**/build/**"
		],
		"terminal.integrated.env.windows": {
			"NODE_OPTIONS": "--experimental-vm-modules --disable-warning ExperimentalWarning"
		},		
		"search.exclude": {
			"**/.git": true,
			"**/build": true,
			"**/coverage": true,
			"/.github/": true,
			"/*.js": true,
			"/*.json": true,
			"CHANGELOG.md": true,
			"docs": true
		},
		"notebook.find.scope": {

			"markupSource": true,
			"markupPreview": true,
			"codeSource": true,
			"codeOutput": true
		},
		"javascript.preferences.importModuleSpecifier": "relative",
		"typescript.preferences.importModuleSpecifier": "relative",
		"eslint.enable": true,
		"coverage-gutters.customizable.status-bar-toggler-watchCoverageAndVisibleEditors-enabled": true,
		"coverage-gutters.showLineCoverage": false,
		"coverage-gutters.showRulerCoverage": true,
		"coverage-gutters.showGutterCoverage": false,

	}
}